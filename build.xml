<?xml version="1.0"?>
<project name="smsSender" default="compile" basedir=".">

    <property name="app.name"      value="smsSender"/>
    <property name="app.path"      value="/${app.name}"/>
    <property name="app.version"   value="0.1-dev"/>
    <property name="build.home"    value="${basedir}/out/artifacts/smsSender_war_exploded/"/>
    <property name="catalina.home" value="/usr/apache-tomcat-7.0.54"/> <!-- UPDATE THIS! -->
    <property name="dist.home"     value="${basedir}/dist"/>
    <property name="docs.home"     value="${basedir}/dist/docs"/>
    <property name="manager.url"   value="http://localhost:8080/manager/text"/>
    <property name="src.home"      value="${basedir}/src"/>
    <property name="web.home"      value="${basedir}/web"/>
    <property name="manager.username"      value="deploymgr"/>
    <property name="manager.password"      value="s3cret"/>


    <property name="compile.debug"       value="true"/>
    <property name="compile.deprecation" value="false"/>
    <property name="compile.optimize"    value="true"/>

    <path id="compile.classpath">

        <!-- Include all JAR files that will be included in /WEB-INF/lib -->
        <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->
        <!--
            <pathelement location="${foo.jar}"/>
        -->
        <fileset dir="${basedir}/lib">
            <include name="*.jar"/>
        </fileset>
        <!-- Include all elements that Tomcat exposes to applications -->
        <fileset dir="${catalina.home}/bin">
            <include name="*.jar"/>
        </fileset>
        <pathelement location="${catalina.home}/lib"/>
        <fileset dir="${catalina.home}/lib">
            <include name="*.jar"/>
        </fileset>

    </path>


    <taskdef resource="org/apache/catalina/ant/catalina.tasks"
             classpathref="compile.classpath"/>

    <!--<target name="compile" depends="prepare"-->
    <target name="compile"
            description="Compile Java sources">

        <!-- Compile Java classes as necessary -->
        <mkdir    dir="${build.home}/WEB-INF/classes"/>
        <javac srcdir="${src.home}"
               destdir="${build.home}/WEB-INF/classes"
               debug="${compile.debug}"
               deprecation="${compile.deprecation}"
               optimize="${compile.optimize}">
            <classpath refid="compile.classpath"/>
        </javac>

        <!-- Copy application resources -->
        <copy  todir="${build.home}/WEB-INF/classes">
            <fileset dir="${src.home}" excludes="**/*.java"/>
        </copy>

    </target>

    <target name="clean"
            description="Delete old build and dist directories">
        <delete dir="${build.home}"/>
        <delete dir="${dist.home}"/>
    </target>

    <target name="all" depends="clean,compile"
            description="Clean build and dist directories, then compile"/>

    <target name="dist" depends="compile,javadoc"
            description="Create binary distribution">

        <!-- Copy documentation subdirectories -->
        <mkdir   dir="${dist.home}/docs"/>
        <copy    todir="${dist.home}/docs">
            <fileset dir="${docs.home}"/>
        </copy>

        <!-- Create application JAR file -->
        <jar jarfile="${dist.home}/${app.name}-${app.version}.war"
             basedir="${build.home}"/>

        <!-- Copy additional files to ${dist.home} as necessary -->

    </target>

    <target name="javadoc" depends="compile"
            description="Create Javadoc API documentation">

        <mkdir          dir="${dist.home}/docs/api"/>
        <javadoc sourcepath="${src.home}"
                 destdir="${dist.home}/docs/api"
                 packagenames="*">
            <classpath refid="compile.classpath"/>
        </javadoc>

    </target>

    <target name="install" depends="compile, prepare"
            description="Install application to servlet container">


        <mkdir  dir="${build.home}/WEB-INF/lib"/>
        <copy    todir="${build.home}/WEB-INF/lib">
            <fileset dir="${basedir}/lib"/>
        </copy>

        <deploy url="${manager.url}"
                username="${manager.username}"
                password="${manager.password}"
                path="${app.path}"
                localwar="file://${build.home}"/>

    </target>

    <target name="manager.deploy" depends="compile, prepare"
            description="Install application to servlet container">


        <mkdir  dir="${build.home}/WEB-INF/lib"/>
        <copy    todir="${build.home}/WEB-INF/lib">
            <fileset dir="${basedir}/lib"/>
        </copy>

        <deploy url="${manager.url}"
                username="${manager.username}"
                password="${manager.password}"
                path="${app.path}"
                config="file://${build.home}/META-INF"/>

    </target>

    <!--
      <mkdir  dir="${build.home}/WEB-INF/lib"/>
        <copy    todir="${build.home}/WEB-INF/lib">
            <fileset dir="${basedir}/lib"/>
        </copy>

    -->

    <target name="list"
            description="List installed applications on servlet container">

        <list    url="${manager.url}"
                 username="${manager.username}"
                 password="${manager.password}"/>

    </target>

    <target name="prepare">

        <!-- Create build directories as needed -->
        <mkdir  dir="${build.home}"/>
        <mkdir  dir="${build.home}/WEB-INF"/>
        <mkdir  dir="${build.home}/WEB-INF/classes"/>

        <!-- Copy static content of this web application -->
        <copy todir="${build.home}">
            <fileset dir="${web.home}"/>
        </copy>

        <!-- Copy external dependencies as required -->
        <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->

        <!-- Copy static files from external dependencies as needed -->
        <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->

    </target>


    <target name="reload" depends="compile"
            description="Reload application on servlet container">

        <reload url="${manager.url}"
                username="${manager.username}"
                password="${manager.password}"
                path="${app.path}"/>

    </target>

    <target name="remove"
            description="Remove application on servlet container">

        <undeploy url="${manager.url}"
                  username="${manager.username}"
                  password="${manager.password}"
                  path="${app.path}"/>

    </target>

    <target name="lite-reload" depends="compile" description="Reload application in Tomcat">

        <reload   url="${manager.url}"
                  username="${manager.username}"
                  password="${manager.password}"
                  path="${app.path}"/>

    </target>


</project>