<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="
			    http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/tx
			    http://www.springframework.org/schema/tx/spring-tx.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context.xsd ">

    <context:property-placeholder location="/WEB-INF/configurations/properties/database.properties" />

    <!--<context:component-scan base-package="com.dsoft" />-->
    <!-- Declare a datasource that has pooling capabilities-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close"
          p:driverClass="${db.driver.class.name}"
          p:jdbcUrl="${db.conn.url}"
          p:user="${db.username}"
          p:password="${db.password}"
          p:acquireIncrement="5"
          p:idleConnectionTestPeriod="60"
          p:maxPoolSize="100"
          p:maxStatements="50"
          p:minPoolSize="10"/>

    <context:component-scan base-package="com.dsoft" />
    <!-- Enable annotation style of managing transactions -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Declare the Hibernate SessionFactory for retri.eving Hibernate sessions -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"  >
        <property name="dataSource" ref="dataSource" />

        <property name="configurationClass">
            <value>org.hibernate.cfg.AnnotationConfiguration</value>
        </property>

        <property name="packagesToScan">
            <list>
                <value>com.dsoft.entity</value>
            </list>
        </property>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">${db.dialect}</prop>
                <prop key="hibernate.validator.apply_to_ddl">true</prop>
                <prop key="hibernate.connection.autocommit">true</prop>
                <!--<prop key="javax.persistence.validation.mode">NONE</prop>-->
                <!--<prop key="hibernate.validator.autoregister_listeners">false</prop>-->
            </props>
        </property>
    </bean>

    <!-- Declare a transaction manager-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"  >
        <property name="dataSource" ref="dataSource" />
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- JDBC Datasource -->
    <!--  <bean id="jdbcDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
            <property name="driverClassName" value="${db.driver.class.name}"/>
            <property name="url" value="${db.conn.url}"/>
            <property name="username" value="${db.username}"/>
            <property name="password" value="${db.password}"/>
      </bean>-->
    <!--
          <bean id="jdbcDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="${db.driver.class.name}"/>
            <property name="url" value="${db.conn.url}"/>
            <property name="username" value="${db.username}"/>
            <property name="password" value="${db.password}"/>
      </bean>-->
    <bean id="jdbcDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driver.class.name}"/>
        <property name="url" value="${db.conn.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

</beans>